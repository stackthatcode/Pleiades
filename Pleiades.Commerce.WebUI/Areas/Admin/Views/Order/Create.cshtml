@using Pleiades.Web.MvcHelpers

@section _Scripts {   
	@Html.Javascript("/aquery/aQuery-1.0-min.js")
    @Html.Partial("_ImageBundleViewer")   
    @Html.Partial("_EndlessGlider")
    @Html.Partial("_CartFactory")    
    @Html.Partial("_BaseViewModel") 
    @Html.Partial("_SelectProducts") 
    @Html.Partial("_ReviewOrder")

    <!-- document.ready() Functions -->
	<script type="text/javascript">
	    var tmp;
	    $(function () {
	        var model = new PushMkt.CreateOrderViewModel();
	        PushMkt.AddListFunctions(model);
	        PushMkt.AddSearchFunctions(model);
	        PushMkt.AddReviewProductsFunctions(model);
	        ko.applyBindings(model);
	        tmp = model;

	        flow.exec(
                function () {
                    model.RetrieveCategoriesList(this);
                },
                function () {
                    model.RetrieveBrandsList(this);
                }
            );

	        // ### TESTING SCRIPTS ###
	        // ### TESTING SCRIPTS ###
	        // ### TESTING SCRIPTS ###
	        window.Automation = function () {
	            flow.exec(
                    function () {
                        model.SearchClick(this);
                    },
                    function () {
                        model.ShowInventory(model.SearchData()[0]);
                        window.setTimeout(this, 1000);
                    },
                    function () {
                        var product = model.SearchData()[0];
                        var inventory = product.Inventory();
                        var sku = inventory[3];
                        sku.SelectedQuantity(2);
                        model.AddToCart(sku, product);
                        //this();
                    },
                    function () {
                        model.ShowInventory(model.SearchData()[0]);
                        window.setTimeout(this, 1000);
                    },
                    function () {
                        var product = model.SearchData()[0];
                        var inventory = product.Inventory();
                        var item = inventory[1];
                        item.SelectedQuantity(2);
                        model.AddToCart(item, product);
                    }
                );
	        }
	    });
	</script>
}

@section _Templates {
    <style>
        table.skutable tbody tr td:nth-child(1)
        {
            width:200px;
        }
        table.skutable tbody tr td:nth-child(2)
        {
            width:150px;
            text-align: right;
        }
        table.skutable tbody tr td:nth-child(3)
        {
            width:150px;
            text-align: right;
        }
        table.skutable tbody tr td:nth-child(4)
        {
            width:150px;
            text-align: right;
        }
        table.skutable tbody tr td:nth-child(5)
        {
            width:150px;
            text-align: right;
        }        
        table.editcart tr td
        {
            border-top: none; 
        }
        div.color-chooser
        {
            margin-right:10px; 
            height:37px; 
            padding:3px; 
            width:37px; 
            text-align:center; 
            overflow:hidden;
            cursor: pointer;
        }
        .selected
        {
            border: 2px solid #F00;
        }
        .not-selected
        {
            border: 2px solid #EEE;
        }
        .label
        {
            cursor: pointer;
        }
    </style>

}

@section _Body {
    <div class="workspace-heading-parent">
		<div class="workspace-heading" data-bind="template: { name: $root.EndlessGlider.WorkspaceTemplate() }">
        </div>
	</div>
	<div id="gliding-container" class="container">
		<div id="glider1" class="glider" data-bind="template: { name: $root.EndlessGlider.EditorTemplate1() }"></div>		
		<div id="glider2" class="glider" data-bind="template: { name: $root.EndlessGlider.EditorTemplate2() }"></div>
    </div>
    <div id="modal-enclave" 
        data-bind="template: { name: $root.ModalViewModel().Template, data: $root.ModalViewModel().Data }">
    </div>    
}
