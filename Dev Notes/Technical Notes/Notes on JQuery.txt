Notes on JQuery
===============

QUERYING STUFF
~~~~~~~~~~~~~~
- img[alt] returns all images that have such an attribute
- Don't use the attributes to set the onclick method
- Not particulalry crazy about the sibling methods
- Positional filters - are actually CSS pseudo-classes :first, :last, :first-child, :last-child, :only-child => 1-based indexing
- :has selector - tr:has(td
- http://www.w3schools.com/css/css_pseudo_classes.asp
- E[A], E[A=V], E[A^=V], E[A$=V], E[A!=V] ==> all work with string values in the attribute value
- :gt(), :lt(), :eq() filter the *matching* elements, not the child elements => zero-based indexing
- :nth-child() function matches child elements specifically
- :not(:checked) - pass values to the "function" - :not(selector)
- :contains works with the element text
- :not(:parent) => returns all leaf elements
- :parent => has child elements
- All images that don't have "dog" in the src attribute


WRAPPED-SET OPERATIONS
~~~~~~~~~~~~~~~~~~~~~~
- show(), hide(), size()
- eq(), first(), last() return WRAPPED set 
- get() => returns NON-wrapped set, get(-1) returns the last element
- add(selector) - expand the wrapped set
- $("#child1, #child2") - select multiple elements
- $('img').not('[title*=puppy]') OR $('img').filter('[title*=puppy]')
- $('td').filter(function() { return $(this).contains('Ruby') }).addClass('thickBorder');
- $('img').filter( function() { return this.id==="cozmo" }).addClass('thickBorder');
- hasClass() returns true or false
- $('img').slice(2, 3).addClass('thickBorder'); => x = start-element, y = end-element
- alert($('li').has(':contains(CSS1)').size());
- $('tr').has('td:contains(Dynamic)').addClass('thickBorder')
- alert($('img').map(function() { return this.id }).get()); => just like LINQ Select()
- $('img').each( function(index) { alert(index + " " + this.src); });
- $([1, 2, 4]).each(function() { alert(this); });
- $(".myList").children().addClass("thickBorder");
- $(".myList").next().addClass("thickBorder");
- $(".myList").prev().addClass("thickBorder");
- $(".myList").parent().addClass("thickBorder");
- parents() => travels all the way
- $("li:not(:has(a))").filter(":not(:has(li))").addClass("thickBorder");
- $(".myList").closest("div").addClass("thickBorder"); => http://api.jquery.com/closest/
- $(".myList > li").find("li").addClass("thickBorder"); COMPARE WITH =>  $(".myList > li").filter("li").addClass("thickBorder");
- $(".myList > li").add("img").end().addClass("thickBorder");
- $(".myList > li").add("img").andSelf().end().addClass("thickBorder");
- andSelf() - for what...?
- Get me the inner html => .html();


** NOTE ** attributes are not limited to this only e.g. value, id, target
- CROSS BROWSER NORMALIZED LIST OF ATTRIBUTES => cellspacing, colspan, cssFloat, float, for, frameborder, maxlength, readonly, rowspan, styleFloat, tabindex, usemap


BRING STUFF TO LIFE
~~~~~~~~~~~~~~~~~~~
- $("li").each(function(index) { $(this).click(function() { alert(index); }); });
- $(".myList > li").cellspacing(20);
- $("table").attr("cellspacing", 2)
- $("td:contains(Java)").attr("colspan", 2)
- $("td:contains(Java)").attr("colspan", function(index, previousValue) { previousValue % 2 + 1 });
- $("td:contains(Java)").attr("colspan", function(index, previousValue) { return previousValue + 1 });
- $("td:contains(Java), td:contains(Smalltalk)").attr( { colspan: 2 });
- $("td:contains(Java), td:contains(Smalltalk)").removeAttr("colspan");
- $("td:eq(3)").data("myval", "123"); alert($("td:eq(3)").data("myval")); $("td:eq(3)").removeData("myval");
- $("td:even").addClass("thickBorder"); alert("ready?"); $("td:even").removeClass("thickBorder"); 
- $("td").click( function(e) { $(this).toggleClass("thickBorder"); alert($(this).attr("className") + "  " + $(this).hasClass("thickBorder")); });
- $("img:even").css("opacity", "0.5");
- $("img").width(100).height(100);
- ALSO: - $("img").width()  and  $("img").height();
- REMEMBER: innerHeight(), innerWidth() ==> includes padding, excludes border
- REMEMBER: outerHeight(margin), outerWidth(margin) ==> includes padding and border AND when margin == true, includes margin
- $(document).scrollTop(200);
- DON'T FORGET => offset() and position()
- html() => $("td:contains(Smalltalk)").html($("<span>").text("hi!"));
- alert($("td:contains(Smalltalk)").html());
- alert($(".myList").text());
- $('td').append("<strong>well, hello!</strong>") => operates on the content of the elements.  prepend() TOO
- $('td').before("<td>well, hello!</td>") => after() as well, addes content as siblings
- $('td').append($("#littlebear")); => MOVES the actual element
- $("<td>See now?</td>").appendTo("td");
- $("td").parent().empty().append($("<td>See now?</td>")); => not what I wanted, but on the way...
- $("#cozmo").wrap($("<div>").addClass("thickBorder"));
- $("img").wrapAll($("<div>").addClass("thickBorder"));
- $("ul").wrapInner($("<div>").addClass("thickBorder"));
- $("ul").unwrap();
- $(".thickBorder").remove(); => removes elements
- $("ul").detach();	=> keeps events and stuff in tact
- $("td").empty();
- $("#cozmo").clone().appendTo("td");
- $('img[alt]').each(function() { $(this).replaceWith($('<span>').attr('alt', $(this).attr('alt'))); }); => this is awesome!
- $('<h2>I dont have a this pointer</h2>').replaceAll('img[alt]');
- alert($("input:checkbox").val().length); => val() works best with single values
- alert($("input:checkbox").map( function() { return $(this).val(); }).toArray()) => HERE'S HOW YOU USE MAP
- $("input:text").val('hello there');
- $("input:checkbox").val(['1', '4']);


EVENTS - IMPORTANT NOTES
~~~~~~~~~~~~~~~~~~~~~~~~
- Use bind() and unbind()
- $("#child1,#child2").bind('click.set1', function(event) { ... });
- Use "namespaces" for events e.g. ==> $("#child1,#child2").bind('click.set1', function(event) { ... });
- Use the jquery.Event object for normalized access to properties
- MVP Functions => preventDefault(), stopPropagation()
- triggerHandler(...) = good news, brah
- toggle(...) more  good news
- $("#child2").bind('mouseover mouseout', function(event) { ... }); == $("#child2").hover()


ANIMATING JQUERY
~~~~~~~~~~~~~~~~
- $(element).is(":visible"), $(element).is(":hidden")
- FUCK IT, THIS WORKS, TOO => $(this).closest('div.module').find('div.body')
- $(this).toggleClass('class name here', $(this).is(':hidden')); => turns it on and off
- toggle(speed, callback) => speed { normal, slow, fast} OR a number
- PIMP TIGHT: use implicit rules => div.module div.caption {...} VERSUS div.module.rolledup div.caption {...}
- Excellent lab! => file:///C:/DEV/JQuery%20Fun/jqia2.source/chapter5/lab.effects.html
- fadeIn, fadeOut, fadeTo, slideUp, slideDown, slideToggle
- CRUCIAL: stop(clearQueue, gotoEnd)
- Use that animate() stuff, bwoah
- IMPORTANT: add normal functions to the animation queue with queue('fx', function() { ...; $(this).dequeue('fx'); });

GOLD KNOWLEDGE! ==> http://stackoverflow.com/questions/2842432/jquery-position-isnt-returning-offset-relative-to-parent


MORE JQUERY UTILITIES => ACTUALLY VERY IMPORTANT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- trim(), each(), grep() == LINQ Where(), map() == LINQ Select()
- $.inArray(value, array); 
- $.merge(array1, array2);
- I LIKE => var func1 = function() { writeln($.makeArray(arguments));
- $.extend(target, source1, source2);
- $.isArray(o), $.isEmptyObject(o), $.isFunction(o), $.isPlainObject(o), $.isXMLDoc(node)
- $.noop() => OK, BRAH
- USEFUL => $.contains(container, containee),
- DATA => $.data(element, name, value); AND $.removeData(element, name);
- What's up the PROXY, biyatch? => Proxy in JQuery == call/apply in JS
- $.getScript() is for Pimp-Playas


DOUBLE SUBMISSION PROTECTION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- $("form").submit( function() { $(":submit", this).attr("disabled", "disabled"); });


MORE ERRATA
~~~~~~~~~~~
- DO THIS => $('img').index($("img#verbena"))
- DON'T DO THIS => $('img').index("img#verbena") - how did Bear get this wrong...?


BEST OF IonesWorks JQUERY
========================
table:has(th:contains("Type")) > tbody > tr:nth-child(2) > td:gt(0)


PLUG-INS N SHIT
===============
- jquery.aleks-1.5.js
- Nice code for creating options with defaults => PAGE 209
- options||{} => this expression returns empty object if options is null
- create a JQuery function:

(function($) {
	$.say = function(what) { alert('I say ' + what); }
})(jQuery);

- create a wrapper function:

(function($) {
	$.fn.makeItBlue = function() {
		return this.css('color', 'blue');
	}
})(jQuery);

- Use end to return the original wrapped set

(function($) {
	$.fn.setReadOnly = function(readonly) {
		return this.filter('input:text')
			.attr('readOnly', readonly)
			.css('opacity', readonly ? 0.5 : 1.0)
			.end();
	};
})(jQuery);


AJAX FOREVER
============
- OLD SCHOOL => xhr.open(), xhr.send(), xhr.onreadystatechange()
- Encoding Request Data as URI => encodeURIComponent => xhr.send('a=1&b=2&c=3'); 
- USE JQuery => encodeURIComponent() on data values == this is the same thing as a form post, brah.  Old school.
- TODO RESEARCH => serialize(), serializeArray(), load() => DONE - THIS IS FOR URI ENCODED STUFF


NOTES ON JQUERY AJAX METHOD
===========================
- dataType => pertains to the Response
- contentType => pertains to the Request
- contentType => application/x-www-form-urlencoded == default
- contentType => application/application/json; charset=utf-8 == JSON, baby!
- success, error & complete => either success or error is invoked first
- timeout => you know what!
- cache => critical on GET's

MOAR TEXTBOOK
=============
- Use $.ajaxSetup(...) to set global settings and events
- Order of Events

ajaxSend
success
ajaxSuccess
error
ajaxError
complete
ajaxComplete
ajaxStop

- Remember that $.extend merges objects
- GOOD! => event.PageX and event.PageY are for locating events.


AJAX STEPS FORWARD
==================
- Re-read Douglas Crockford's Appendix E on JSON & his JSON2 library
- Examine ASP.NET MVC JsonResult & JsonValueProviderFactory


