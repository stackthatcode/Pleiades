Editor Post Mortem Notes------------------------- Trees are nice to look at, but they're not fun to modify.- SoC is always important and true.  If it still seems too complicated, the problem hasn't been properly defined, with individual issues identified and organized.- Sometimes, minimizing properties is important.  IOW don't have too many properties to express your view state.- Every new library carries a learning curve.  Don't expect changes to architecture to be immediately obvious.  ALSO: trying to accomplish basic things will require a large amount of time if you haven't already done it.- Without Unit Testing you're making unrealistic expectations -- and about to waste your time.UPDATE:- When we're going to have client-side state persist between server refreshes, that state needs to be stored separately i.e. in a dictionary or something(!!!)- Without understanding HOW a framework operates, you can expect surprises along the way.  You need to understand the fundamental architecture of your supporting frameworks, otherwise, your estimate are at the mercy of fortune.*** MANDATE => after burndown of the goddamn backlog for Category Editor, every feature is weighed and estimated accordingly!  Make a feature Backlog.*** MANDATE => research HOW KnockoutJS actually works internallySome Burndown-------------Front Range - 11/4/2012 - RECAP- Good to create a solid DataAdapter mock - CHECK- http://stackoverflow.com/questions/6237198/jquery-show-div-and-scroll-to-it-without-hashtag-in-url- Possibly create a separate Adapter class...  which can be mocked up so I can test my AJAX stuff separately => TODO-1.) Fix the rendering height => DONE 11/9/20120.) Scroll To New Record => => DONE 11/10/2012- Save Id in hidden field => DONE- Find field with JQuery and Scroll To Parent => DONE- ???- Profit => DONE6.) Collapse Button => DONE 11/17/2012- Had to write logic to recover collapse state after refreshing a record.- NOTE: wouldn't have tp do if we had a "State Sleeve"- Get Products => v2.0 Backlog- Add Template for ChildChildView => v2.0 Backlog- Add another ChildView => v2.0 Backlog11/18/2012----------- Fix the View Model after adding Collapse feature11/19/2012----------- Created SQL model and queries for storing hierarchical SQL Data- Stubbed-out methods on the JavaScript Data Adapter11/20/2012----------// TODO: change this to RetrieveAllBySectionId - DONE// ALSO: add a RetreiveSections() method to DataAdapter - DONE- Add SectionViewModel => DONE11/21/2012----------NEW.) Add Section Drop Down Wiring - Click- Fix the Section Name in the Header1.5.) Change Parent Drop Down- Get Parents Method => DONE- Add Drop Down template => DONE- JQuery asynchronous programming => DONE11/22/2012----------1.25.) Add another Go To Section for Sub Category => DONE- Change Section for Category => DONE1.5.) Change Parent- Make this the Parent Category => DONE- Add Checkmark to Section Navigator => DONE11/23/2012----------1.) MASSIVE refactoring -- completely eliminated the horribly misguided Pipelines and Filters pattern in its entirety.2.) Moved functionality into extension methods and remaining complex, stateful-stuff into AggregateUserService3.) REwrote Unit Tests for Aggregate User Service4.) ALSO: trimmed those AWFUL comments from the MembershipProvider AND removed extraneous Factory reference therein11/25/2012----------- Some basic KO code sanitization => DONE1.9.) Empty Section markup => DONE- Added Section check mark to both templates => DONE2.) Delete Button => DONE- Add Modal Pop-up - are you sure? =>  DONE3.) Global Error Handling w/ Pop-up => DONE- Add Modal Pop-up "Something Went Wrong.  Please Refresh the Page" => DONE3.5.) Add ErrorState to DataAdapter, and ServerError to ViewModel => DONE- ALSO: added error simulation => DONE// I WANT SYMMETRY!  I WANT TO MAKE ASSEMBLING STUFF EASY FOR THE SERVER.  <=== FUCK YOU!!!  BUILDING JSON IS TRIVIAL FOR C#// UPDATE: everything was upside down.  This should store everything flat for ease-of-manipulation, then translate into JSON accordingly.// THEREFORE: refactor this and eliminate the tree structure bullshit in our mock data layer.// Another Update: // 1.) problems if we use SectionId -- why does this bother me?//		A.) RetrieveByParentId has SectionId//		B.) Not beautiful abstract//		C.) How often will we repeat ourselves...?  In the database!  In queries!//		D.) Moving a Category to a new section is too much work// 2.) problems if we use ParentId... //		A.) Query complexity... may have to run twice//		SELECT * FROM Category t1 WHERE t1.ParentId = "1001" AND t2.ParentId = t1.Id//  http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/11/26/2012----------5.) AJAX Hourglass- Wire AJAX hourglass into the DataAdapter11/28 - 11/30-------------- Confrontation of the asynchronous issues- Refactoring to account for lag12/2----7.) Validation- Max Length - to HTML- Show Alert When Empty- FINISHED THE asynchronous programming for the flow.js libraryBacklog Category Editor-----------------------Server Side WiringAPPROVED FEATURE BACKLOG------------------------- Develop and/or Research Fluent Validation library => TODOPENDING FEATURE BACKLOG------------------------ Review order of Modal Ok/Cancel => PENDING EVAL- Show the number of Products under Category => PENDING EVAL- Modify Category Editor design i.e. Number of Categories, Products, etc. => PENDING EVAL- Rendering Adjustments for long Category Names et. al. => PENDING EVAL- TASK => cross-browser test Animation Stuff, mayhaps introduce method chaining => PENDING EVAL- Add Modal Pop-up - "Are You Sure?" Category Parent Change, etc. => PENDING EVAL- Add constraints on the number of records we can add => PENDING EVAL- View Products => Hot Link to a RESTful URL - TODO => PENDING EVALAdmin MVP Big Feature List - 12/2/2012---------------------------------------- Section Editor- Category Editor => ALMOST DONE- Brand Editor- Size Editor- Color Editor- Product Search & Editor- Order Search & Editor- Customer Search & Editor- SKU Generator- Basic Analytic Tracker - Traffic Source, Landing Page => WORTH HASHING OUT- Image Upload & Processing Engine- Email Sending Engine- Server Logging- Barebones Console App