FRONTRANGE - HOTZONE
====================

Burndown 8/16/2013 (5 Hours)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Fixed Color Screens - good to go!
- Fixed Product Thumbnail Image for missing image on Product Search => DONE
- Fixed major defect with Category searching => DONE
- Fixed Delete Product defect => DONE
- Almost finished fixing the Colors => DONE



Final Deliverable Definition
----------------------------
- Refactor the Products to use the Endless Glider, plus clean the Templates => IN PROGRESS

- Fix Product Thumbnail when there are no Images => TODO
- Fix Delete Product Bug => TODO
- Add Null-check to Image Bundle Repository => TODO

* http://mindre.net/Article/Microsoft_Web_Optimization_development
* HOW TO DEBUG BUNDLES...?

- Landing-Page + Microsite => IN PROGRESS
- Revamped Membership Provider => TODO
- Customer Checkout => TODO
- Admin Search & Manage Orders => TODO
- Admin Sales Graph by Product => TODO

- Barebones Console App => ALMOST DONE
- Email Sending Engine => TODO
- Server Logging => TODO
- Stripe Payment Integration => TODO
- Amazon EC2 Hosting => TODO
- http://blog.stevensanderson.com/2008/09/01/prevent-cross-site-request-forgery-csrf-using-aspnet-mvcs-antiforgerytoken-helper/


Already Done
~~~~~~~~~~~~
- Login Screen => DONE
- Admin User Manager => DONE
- Category Editor => DONE
- Size Editor => DONE
- Section Editor => DONE
- Color Editor => DONE
- Brand Editor => DONE
- Image Upload & Processing Engine => DONE
- Product Search & Editor => DONE
- SKU Generator + Inventory Tracker => DONE
- Admin Order Create => DONE
- Payment Processing Stub => DONE
- Check-out Process Server-side => DONE



### Design Options for StoreFront
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Top Black Band
* Condensed White on Black Logo
* Contact Us
* View Cart 
* Check-out

- Logo | Cart | Checkout
- Product Widgets
- Browse By Brand Slideshow
- Populate the Bottom with Content => TODO



Checkout
~~~~~~~~
* Edit Cart
* Shipping
* Billing
* Payment
* Thanks

Landing Pages
~~~~~~~~~~~~~
* Single Product => TODO
* Browser => TODO

Appendix Pages
~~~~~~~~~~~~~~
* Contact Us Page => TODO
- Email Form
- Google Map
- Street Address
* Shipping => TODO
* Returns => TODO
* About Us Page => TODO




- Load Test Data into Console App => TODO
- Add Data Clean-up Option to the Console App => TODO

* Host on EC2 by 6/1 => IN PROGRESS - FAIL
- Research EC2 some more
- Sign-up to use EC2

* Manage an Order CRUD screen => IN PROGRESS
- Order Search Query
	- Complete/Incomplete Orders
	- By Date
- Order Search Results
- Order Summary Tab (Aggregate Status, Shipping, 3 Most Recent Histories)
- Split OrderLine (put something in the History)
- Ship OrderLines => Split as needed => Update Status + History
- Refund => Choose Order Lines => Hit the Payment Processor => Update Status on Order Lines + History
- Fail Shipping => Choose Order Lines => Update Status + History
- Get Refunds by Sku...?

* Sidelog
- Prevent multiple Pop-ups from appearing
- Centralize Settings for Ajax-Service and ImageBundleView and UploadTest scripts => TODO (REFACTORING)

* Product Page Inventory
- Brand Logo
- Image Browser w/ close-up
- Description - add markdown?  Probably => TODO

* Brand - design a brand
* Choose Fonts
* Slideshow - identify images & marketing, based on Products and marketing message => TODO
* You might also like

~ FONTS => https://news.ycombinator.com/item?id=5407499




Backlog
-------
* http://stackoverflow.com/questions/3730777/whats-so-restful-about-asp-net-mvc => IMPORTANT
- Add a Logout Button
- SUPER IMPORTANT - post mortem my approach to the designing the UI.  How to improve my speed? => TODO
* On the StoreFront "Wrong Size or Color? Click Here" - and Navigate to Product => TODO
- Improve the quality of client-side Error Logging => TODO
- Check Sanderson for advanced Model Binding => TODO
- 150 Magic Number(!!!) => TODO - FIX
- IsONline - Check How This Functions => UPDATE - NEED TO FIX TOUCH Function
- Donate $20 to FineUploader upon successful integration => TODO

PHASE 2 - Or not...?
--------------------
- Analytics Integration - KISS, Mixpanel, whatevs
- Automated Traffic Management
- Email Marketing w/ User Management
- Offer Engine
- Shipping API's
- Mobile Storefront + Cart



ARCHITECTURAL REVIEW 1/24/2013
------------------------------
- Flatten the Membership Provider object graph stuff
- Modify permissions so Admins can modify their Expiration
- Copy from the Dot Net Framework into MembershipService
- Create a separate Authentication Service - Aggregate User Service should deal with CRUD only
- Owner Authorization Service overlaps with Aggregate User Services... eliminate this method Authorize(int ownerUserId)
- Determine how to delegate User Authorization to Aggregate User Service... if at all!  Maybe that shit goes in the Controller?  Hmm....
- Consider using OnActionExecuting instead of the Attribute... maybe.
- Ultimately, should Pleiades be separate from Commerce...?  Nah, but move that Attribute out of Pleiades.  Fuck Security Context factory.
- Move Owner Auth Service under Rules
- Roll Pleiades.UnitTests and Security Tests into Pleiades.Web.UnitTests
- Roll Pleiades Base, Data EF, and TestHelpers into Pleiades.Web.Foundation
- Move ProductSearchRepository stuff into the Controller.  Yup!  Try it!
- Compbine Domain and Persist assemblies.  They're not separate, dude!!!
* NOTE: we never ever DELETE User records



MORE BIG FISH
-------------
=> Payment Processing Options, API's etc. => IN PROGRESS
=> Custom Caching solution...? => IN PROGRESS
=> http://news.ycombinator.com/item?id=4669866 => IMPORTANT
=> Enable for Azure => TODO
- Web Optimization Toolkit / Bundle Thingy => TODO


E-Commerce API's & Payment Processors
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Stripe
- Cheddar Getter
- Braintree
- WePay

Please Research
~~~~~~~~~~~~~~~
https://github.com/MatthewMueller/array
https://github.com/danderson00/knockout.composite/tree/master/Examples
http://news.ycombinator.com/item?id=3265625
http://twitter.github.com/flight/
http://fortawesome.github.com/Font-Awesome/
http://pcottle.github.com/learnGitBranching/
SublimeText + Resharper => TODO
- http://fortawesome.github.com/Font-Awesome/


Development Backlog
-------------------- 
Upgrade to ASP.NET MVC 4.0 (4.5?) => TODO
* Get Scott Hanselman's obj/bin cleaner utility => IN PROGRESS
- Disable Caching for AJAX stuff with ASP.NET MVC => TODO

PENDING FEATURE BACKLOG
-----------------------
- Add more Logging to the Security check => PENDING EVAL
- What about virus scan for file uploads, etc.? => PENDING EVALUATION
- Show the number of Products under Category => PENDING EVAL
- Rendering Adjustments for long Category Names et. al. => PENDING EVAL
- View Products => Hot Link to a RESTful URL - TODO => PENDING EVAL

Research Backlog
----------------
- DapperORM
- SQL ShowPlan, Common Table Expressions 
=> require.js? => We'll see => DONE FOR NOW
=> Where did I put my fonts...?  What's a good resource for typography and fonts...? => TODO
- TODO KNOCKOUTJS: difference between http://knockoutjs.com/documentation/extenders.html AND custom binders
- ToHtmlString() => TODO
- What's the benefit of <: stuff again...? => TODO
- difference between <%: and <%=
- Model Binding, how it all works - REVIEW
- Easily the most important security article evar => - http://blogs.msdn.com/b/rickandy/archive/2011/05/02/securing-your-asp-net-mvc-3-application.aspx
- Look up Troy Hunt's article's, too
*** TODO: what is the function of "nav-collapse collapse"?
*** MANDATE => research HOW KnockoutJS actually works internally
- http://code.google.com/p/autofac/wiki/MvcIntegration
