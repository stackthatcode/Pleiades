@using System.Configuration

@section _Scripts {
    @Html.Javascript("~/Content/Bootstrap_2_3_2/js/bootstrap-datepicker.js")
    @Html.Stylesheet("~/Content/Bootstrap_2_3_2/css/datepicker.css")
    @Html.Javascript("~/Content/Flot/jquery.flot.js")
    @Html.Javascript("~/Content/Flot/jquery.flot.pie.js")
    @Html.Javascript("~/Content/Flot/jquery.flot.time.js")

    <script type="text/javascript">
        var PushMkt = PushMkt || {};

        PushMkt.Dashboard = function() {
            self = this;

            self.Service = new PushLibrary.Ajax();

            self.InitializeControls = function() {
                var nowTemp = new Date();
                var now = (nowTemp.getMonth() + 1) + "/" + nowTemp.getDate() + "/" + nowTemp.getFullYear();

                var twoWeeksAgoTemp = new Date();
                twoWeeksAgoTemp.setDate(nowTemp.getDate() - 14);
                var twoWeeksAgo = (twoWeeksAgoTemp.getMonth() + 1) + "/" + twoWeeksAgoTemp.getDate() + "/" + twoWeeksAgoTemp.getFullYear();

                $("#data-picker-start").val(twoWeeksAgo);
                $("#data-picker-end").val(now);
                $("#data-picker-start").datepicker();
                $("#data-picker-end").datepicker();
                $("#refresh").click(self.RefreshData);
            };

            self.RefreshData = function() {
                var startDate = $("#data-picker-start").val();
                var endDate = $("#data-picker-end").val();
                // TODO: please enter a valid date?

                flow.exec(
                    function() {
                        self.LoadSalesAndRefundsGraphs(startDate, endDate, this);
                    },
                    function() {
                        self.LoadSkuGraphs(startDate, endDate, this);
                        console.log("Done!");
                    }
                );
            };

            self.LoadSalesAndRefundsGraphs = function(startDate, endDate, callback) {
                var salesDollars = [], refundsDollars = [], salesQuantity = [], refundQuantity = [];
                flow.exec(
                    function() {
                        self.AnalyticDataService('TotalSalesAmountsByDate', startDate, endDate, this);
                    },
                    function(data) {
                        salesDollars = data;
                        self.AnalyticDataService('TotalRefundAmountsByDate', startDate, endDate, this);
                    },
                    function(data) {
                        refundsDollars = data;
                        $.plot(
                            "#SalesAndRefundsDollar",
                            [
                                { data: salesDollars, label: "Sales $(USD)" },
                                { data: refundsDollars, label: "Refunds $(USD)" }],
                            {
                                xaxis: { mode: "time" }
                            });
                        self.AnalyticDataService('TotalSalesQuantitiesByDate', startDate, endDate, this);
                    },
                    function(data) {
                        salesQuantity = data;
                        self.AnalyticDataService('TotalRefundQuantitiesByDate', startDate, endDate, this);
                    },
                    function(data) {
                        refundQuantity = data;
                        $.plot(
                            "#SalesAndRefundsQuantity",
                            [
                                { data: salesQuantity, label: "Sales Items" },
                                { data: refundQuantity, label: "Refunds Items" }],
                            {
                                xaxis: { mode: "time" }
                            });
                        if (callback) callback();
                    }
                );
            };

            self.LabelFormatter = function(label, series) {
                return "<div style='font-size:8pt; text-align:center; padding:2px; color:white;'>" + 
                        Math.round(series.percent) + "%</div>";
            };

            self.RenderPieChart = function(container, data, empty) {
                if (!data.length) {
                    $(container).hide();
                    $(empty).show();
                    return;
                }
                
                $(container).show();
                $(empty).hide();                
                $.plot(container,
                    data,
                    {
                        series: {
                            pie: {
                                show: true,
                                radius: 1,
                                label: {
                                    show: true,
                                    radius: 3 / 4,
                                    formatter: self.LabelFormatter,
                                    background: {
                                        opacity: 0.5,
                                        color: '#000'
                                    }
                                },
                            },
                        },
                        legend: {
                            show: true
                        },
                    });
            };

            self.LoadSkuGraphs = function(startDate, endDate, callback) {
                var salesDollarsBySku = [], refundDollarsBySku = [];

                flow.exec(
                    function() {
                        self.AnalyticDataService('TotalSalesAmountsBySku', startDate, endDate, this);
                    },
                    function(data) {
                        console.log(data);

                        salesDollarsBySku = data;
                        self.RenderPieChart("#SaleDollarsBySku", salesDollarsBySku, "#SaleDollarsBySkuEmpty");
                        self.AnalyticDataService('TotalRefundAmountsBySku', startDate, endDate, this);
                    },
                    function(data) {
                        refundDollarsBySku = data;
                        self.RenderPieChart("#RefundDollarsBySku", refundDollarsBySku, "#RefundDollarsBySkuEmpty");
                        if (callback) callback();
                    }
                );
            };

            self.AnalyticDataService = function(analytic, startDate, endDate, callback) {
                var url = "/Analytics/Data?analytic=" + analytic + "&startDate=" + startDate + "&endDate=" + endDate;
                self.Service.AjaxGet(url, callback);
            };
        };

        $(function() {
            var dashboard = new PushMkt.Dashboard();
            dashboard.InitializeControls();
            dashboard.RefreshData();
        });
    </script>
}

@section _Body {    
    <div class="workspace-heading-parent" style="height:200px;">        
        <div style="height:60px;"></div>
        <div id="heading" class="container">
            <div class="row">
                <span class="span10">
                    <h1>@ConfigurationManager.AppSettings["PushMarketSoftwareName"] @ConfigurationManager.AppSettings["PushMarketVersion"]</h1>
                    <h4 style="color:#999;">@ConfigurationManager.AppSettings["PushMarketCompanyName"]</h4>            
                </span>
                <span class="span2">
                    <div style="height:15px;"></div>
                    <a href="@ConfigurationManager.AppSettings["StorefrontUrl"]" class="btn btn-block">Go to Storefront &nbsp;<i class="icon-arrow-right"></i></a>
                </span>
            </div>

            <div style="height:8px;"></div>

            <div class="row">
                <div class="span3">
                    <div style="float:left; padding-top:3px;">From Date: &nbsp;</div>
                    <input type="text" class="span2" value="02-16-2012" id="data-picker-start" />
                </div>

                <div class="span3">
                    <div style="float:left; padding-top:3px;">To Date: &nbsp;</div>
                    <input type="text" class="span2" value="02-16-2012" id="data-picker-end" />
                </div>

                <div class="span3">
                    <a class="btn btn-primary" id="refresh" style="width:125px;">
                        Refresh <i class="icon-search icon-white"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div id="body-container" class="container">
        <div style="height:20px;"></div>

        <div class="row">
            <div class="span6" style="text-align:center;">
                <h4 style="color:#666;">Total Sales &amp; Refund Dollars By Date</h4> 
                <div id="SalesAndRefundsDollar" style="height:330px; width:460px;"></div>
            </div>
            <div class="span6" style="text-align:center; height:330px; ">
                <h4 style="color:#666;">Top 5 Sellers By Sku</h4> 
                <div id="SaleDollarsBySku" style="height:330px; width:460px; display:none;">
                </div>
                <div id="SaleDollarsBySkuEmpty" style="height:300px; width:460px; border:1px dotted #999999;">
                    <h2 style="color:#999; margin-top:110px;">No Data Available for<br /> Time Period</h2>
                </div>
            </div>
        </div>
        
        <div style="height:50px;"></div>        

        <div class="row">
            <div class="span6" style="text-align:center;">
                <h4 style="color:#666;">Total Sales &amp; Refund Items By Date</h4> 
                <div id="SalesAndRefundsQuantity" style="height:330px; width:460px;"></div>
            </div>
            <div class="span6" style="text-align:center;">
                <h4 style="color:#666;">Top 5 Refunds By Sku</h4>                 
                <div id="RefundDollarsBySku" style="height:330px; width:460px; display:none;">
                </div>
                <div id="RefundDollarsBySkuEmpty" style="height:300px; width:460px; border:1px dotted #999999;">
                    <h2 style="color:#999; margin-top:110px;">No Data Available for<br /> Time Period</h2>
                </div>

            </div>
        </div>
        
        <div style="height:100px;"></div>
    </div>
}