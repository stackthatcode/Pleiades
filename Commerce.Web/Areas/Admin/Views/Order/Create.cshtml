@using Pleiades.Web.MvcHelpers

@section _Scripts {
    @Html.Partial("_EndlessGlider")
    @Html.Partial("_ModalDialog")
    @Html.Partial("_ImageBundleViewer") 

    @Html.Partial("_CartFactory")    
    @Html.Partial("_ReferenceData")
    @Html.Partial("_SelectProducts") 
    @Html.Partial("_ReviewOrder")
    @Html.Partial("_Shipping")
    @Html.Partial("_Billing")
    @Html.Partial("_Completion")

    <!-- document.ready() Functions -->
	<script type="text/javascript">
	    var PushMkt = PushMkt || {};
	    PushMkt.CreateOrderViewModel = function () {
	        var self = this;

	        // We're using a "plain-vanilla" Ajax Service
	        self.Service = new PushLibrary.Ajax();

	        // Modal state + functions
	        self.ModalViewModel = new PushMkt.ModalDialogViewModel();

	        // ... and pass throughs
	        self.ShowModal = function (template, header, body, list, callback) {
	            self.ModalViewModel.ShowModal(template, header, body, list, callback);
	        }

	        // Glider functions
	        self.EndlessGlider = new PushMkt.EndlessGlider();
	        self.EndlessGlider.Init("Top-Workspace-SelectProducts", "Main-Editor-SelectProducts");

	        // ... and pass throughs
	        self.GlideLeft = function (template, userCallback) {
	            self.EndlessGlider.GlideToLeft("Top-Workspace-" + template, "Main-Editor-" + template, userCallback);
	        }
	        self.GlideRight = function (template, userCallback) {
	            self.EndlessGlider.GlideToRight("Top-Workspace-" + template, "Main-Editor-" + template, userCallback);
	        }
	    }

        var tmp;
	    $(function () {
	        var model = new PushMkt.CreateOrderViewModel();
	        PushMkt.AddListFunctions(model);
	        PushMkt.AddSearchFunctions(model);
	        PushMkt.AddReviewProductsFunctions(model);
	        PushMkt.AddShippingFunctions(model);
	        PushMkt.AddBillingFunctions(model);
	        PushMkt.AddCompletionFunctions(model);
	        ko.applyBindings(model);

	        flow.exec(
                function () {
                    model.RetrieveCategoriesList(this);
                },
                function () {
                    model.RetrieveBrandsList(this);
                },
                function () {
                    model.RetrieveStatesOfAmerica(this);
                },
                function () {
                    model.RetrieveShippingMethods(this);
                }
            );

            tmp = model;
        });
    </script>
}

@section _Templates {
}

@section _Body {
    <div data-bind="template: { data: $root.EndlessGlider, name: 'Endless-Glider-Scaffolding' }">
    </div>
    
    <div data-bind="template: { data: $root.ModalViewModel , name: 'Modal-Dialog-Scaffolding' }">
    </div>
}
