<!-- Size View Model -->
<script type="text/javascript">
    var PushMkt = namespace("PushMkt");

    PushMkt.AddSizeFunctions = function (rootModel) {
        var self = rootModel;
        self.SelectedProductSizes = ko.observableArray();
        self.SizeReferenceData = ko.observableArray();
        self.NewSizeInput = ko.observable(null);

        self.AddSizeFromList = function() {
            flow.exec(
                function() {
                    self.ProductService.SizeGroups(this);
                },
                function(data) {
                    self.SizeReferenceData(data);

                    $.each(data, function(index, elem) {
                        $.each(elem.Sizes, function(index, subElem) {
                            subElem.Selected = ko.observable(false);
                        });
                    });
                    self.GlideRight("AddSizesFromList", "AddSizesFromList", this);
                }
            );
        };

        self.CreateNewSize = function() {
            var input = {
                EditAbbreviation: ko.observable(null),
                EditName: ko.observable(null),
                EditSkuCode: ko.observable(null),
            };
            self.NewSizeInput(input);
        };

        self.CancelCreateNewSize = function() {
            self.NewSizeInput(null);
        };

        self.GlideBackToSizesTabWithRefresh = function(callback) {
            flow.exec(
                function() {
                    self.ProductService.Sizes(self.SelectedProduct().Id(), this);
                },
                function(sizes) {
                    self.SelectedProductSizes(sizes);
                    self.GlideLeft("Child", "Sizes", this);
                },
                function() {
                    self.MakeSizesSortable();
                    if (callback) {
                        callback();
                    }
                }
            );
        };

        self.GlideBackToSizes = function() {
            flow.exec(
                function() {
                    $("#GlideParent").hide();
                    self.GlideLeft("Child", "Sizes", this);
                },
                function() {
                    self.MakeSizesSortable();
                }
            );
        };
                        
        // If there is Inventory, and this is the first Size, it will wipe the Inventory
        self.SizeInventoryCheck = function(action) {
            flow.exec(
                function() {
                        self.ProductService.InventoryTotal(self.SelectedProduct().Id(), this);
                },
                function(inventoryTotal) {
                    if (self.SelectedProductSizes().length == 0 && inventoryTotal.Total > 0) {
                        self.ShowAddSizesInventoryDialog(action);
                    } else {
                        action();
                    }
                }
            );
        };

        self.ShowAddSizesInventoryDialog = function(action) {
            self.ModalViewModel({ Action: action, Template: "Modal-Dialog-ProductSizeInventory" });
            $('#modal-dialog').modal('show');
        };

        self.AddSizesToProductClick = function() {
            self.SizeInventoryCheck(self.AddSizesToProductAction);
        };

        self.AddSizesToProductAction = function() {
            $('#modal-dialog').modal('hide');
            var sizeIdList = [];
            $.each(self.SizeReferenceData(), function(index, elem) {
                $.each(elem.Sizes, function(index, subElem) {
                    if (subElem.Selected()) {
                        sizeIdList.push(subElem.Id);
                    }
                });
            });

            var callback = (self.SelectedProductSizes().length == 0) ? self.ShowAddSizesDialog : null;

            var iterator = function() {
                if (sizeIdList.length == 0) {
                    self.GlideBackToSizesTabWithRefresh(callback);
                    return;
                }

                var nextSizeId = sizeIdList.shift();
                self.ProductService.AddProductSize(self.SelectedProduct().Id(), nextSizeId, iterator);
            };
            iterator();
        };

        self.DeleteProductSize = function(size) {
            self.ModalViewModel({ Template: "Modal-Dialog-ProductSize", Data: size });
            $('#modal-delete').modal();
        };

        self.DeleteProductSizeConfirm = function() {
            var size = self.ModalViewModel().Data;
            flow.exec(
                function() {
                    $('#modal-delete').modal('hide');
                    self.ProductService.DeleteProductSize(self.SelectedProduct().Id(), size.Id, this);
                },
                function() {
                    self.SelectedProductSizes.remove(size);
                    self.ModalViewModel({ Template: null });
                }
            );
        };

        self.SizesTabClick = function() {
            flow.exec(
                function() {
                    self.ProductService.Sizes(self.SelectedProduct().Id(), this);
                },
                function(sizes) {
                    self.SelectedProductSizes(sizes);
                    self.SetActiveMainEditor("Sizes");
                    self.MakeSizesSortable();
                }
            );
        };

        self.MakeSizesSortable = function() {
            $(".sortable").sortable({
                placeholder: "ui-state-highlight",
                update: self.UpdateSizeSortOrder,
                delay: 300
            });
            $(".sortable").disableSelection();
        };

        self.UpdateSizeSortOrder = function () {
            var sortOutput = [];
            $.each($("#sizes > div"), function (index, elem) { 
                sortOutput.push($(elem).attr('id').replace('sorted', '')); 
            });
            var sortedIds = sortOutput.join(",");
            self.ProductService.UpdateSizeOrder(self.SelectedProduct().Id(), sortedIds);
        };
    }
</script>
    
<!-- KNOCKOUT TEMPLATE - MODAL DIALOG PRODUCT ADD SIZE -->
<script type="text/html" id="Modal-Dialog-ProductSizeInventory">
    <div id="modal-dialog" class="modal hide fade">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h3>Add Sizes to Product</h3>
        </div>
        <div class="modal-body">
            <p><strong>You will now be tracking Sizes in Inventory.</strong></p>
            <p>Old Inventory without Size will be destroyed.  Please update your Inventory.</p>
        </div>
        <div class="modal-footer">    
            <a href="#" class="btn btn-inverse" data-dismiss="modal"><i class="icon-remove icon-white"></i> Cancel</a>
            <a href="#" id="modal-action" class="btn btn-primary" data-bind="click: $root.ModalViewModel().Action"><i class="icon-ok icon-white"></i> Ok</a>
        </div>
    </div>
</script>

<!-- KNOCKOUT TEMPLATE - MAIN EDITOR SIZES TAB -->
<script type="text/html" id="Main-Editor-Sizes">
    <div style="margin-top:20px;">
        <form>
            <div style="margin-top:40px; text-align:center;" class="alert alert-info" data-bind="visible: $root.SelectedProductSizes().length == 0">
                <strong>There are no Sizes for this Product.     a Size from the existing list.</strong>  
            </div>

            <div id="sizes" class="sortable" data-bind="foreach: $root.SelectedProductSizes()">
                <div class="draggable" data-bind="attr: { id: 'sorted' + $data.Id }">
                    <table class="table table-hover" style="margin-bottom:0px;">
                        <tbody>
                            <tr>
                                <td style="width: 700px;">
                                    <input type="hidden" data-bind="attr: { id: 'tracker' + $data.Id }" />
                                    <h4><span data-bind="text: $data.Name"></span></h4>
                                    <p>Abbreviation: <span data-bind="text: $data.Abbr"></span>                                
                                        - Sku Code: <span data-bind="text: $data.SkuCode"></span>
                                    </p>
                                </td>
                                <td style="width: 230px; text-align: right">
                                    <a href="#" class="btn btn-inverse disabled"><i class="icon-screenshot icon-white"></i> Drag Me!</a>
                                    <a class="btn btn-primary" style="width:70px;" href="#" 
                                       data-bind="click: function() { $root.DeleteProductSize($data) }"><i class="icon-trash icon-white"></i> Delete</a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </form>

        <div style="width:100%; height:100px;"></div>
    </div>
</script>


<!-- KNOCKOUT TEMPLATE - TOP WORKSPACE ADDSIZESFROMLIST -->
<script type="text/html" id="Top-Workspace-AddSizesFromList">
    <div class="workspace-heading" style="height:125px;">
        <div class="container" data-bind="if: $root.SelectedProduct()" style="height:124px;">
            <div class="row" style="position:relative;">				
                <div class="span12">
                    <h1>Products &gt; <span data-bind="text: $root.SelectedProductName"></span></h1>
                </div>
            </div>
                
            <div style="height:20px;"></div>

            <div class="row">
                <div class="span2">
                    <ul class="nav nav-pills">
                        <li style="width:150px;">
                            <a id="GlideParent" data-bind="click: $root.GlideBackToSizes">&laquo; Back to Product</a>
                            &nbsp;
                        </li>
                    </ul>
                </div>
                <div class="span5">
                    <p class="lead" style="color:#999;">Select Sizes to add to your Product</p>
                </div>
                <div class="span5" style="text-align:right;">
                    <a class="btn btn-inverse" href="#" data-bind="click: $root.GlideBackToSizes"><i class="icon-remove icon-white"></i> Cancel</a>                    
                    <a class="btn btn-primary" href="#" data-bind="click: $root.AddSizesToProductClick"><i class="icon-ok icon-white"></i> Add Sizes</a>
                </div>
            </div>
        </div>
    </div>
</script>
<script type="text/html" id="Main-Editor-AddSizesFromList">
    <form>
        <div style="width:100%; margin-top:20px;"></div>

        <div style="margin-top:40px; text-align:center;" class="alert alert-info" data-bind="visible: $root.SizeReferenceData().length == 0">
            <strong>There are no Size Groups.  Go to Lists &gt; Sizes to add pre-defined Sizes.</strong>  
        </div>
		    
        <table class="table table-hover" data-bind="visible: $root.SizeReferenceData().length > 0">
            <tbody data-bind="foreach: $root.SizeReferenceData()">
                <tr>
                    <td colspan="2">
                        <span class="span12">
                            <input type="hidden" data-bind="attr: { id: 'tracker' + $data.Id }" />
                            <h4 data-bind="text: $data.Name"></h4>			    
                        </span>
                    </td>
                </tr>
                <!-- ko foreach: $data.Sizes-->
                <tr>
                    <td style="width:870px; padding-left:50px;">
                        <h4>&raquo; <span data-bind="text: Description"></span></h4>
                        <span>Abbreviation:</span> <span data-bind="text: Name"></span> - 
                        <span>Sku Code:</span> <span data-bind="text: SkuCode"></span>
                    </td>
                    
                    <td style="width:150px;">
                        <div data-bind="if: $data.Selected() == false">
                            <a class="btn btn-primary" style="width:70px;" href="#" data-bind="click: function() { $root.SelectColor($data) }">
                                <i class="icon-plus icon-white"></i> Select</a>
                        </div>
                        <div data-bind="if: $data.Selected() == true">
                            <span class="label label-info">Selected!</span>
                            <a class="btn btn-white" style="width:70px;" href="#" data-bind="click: function() { $root.SelectColor($data) }">
                                <i class="icon-minus icon-black"></i> Remove</a>
                        </div>
                    </td>
                </tr>
                <!-- /ko -->
            </tbody>
        </table>

        <div style="width:100%; height:100px;"></div>
    </form>
</script>
